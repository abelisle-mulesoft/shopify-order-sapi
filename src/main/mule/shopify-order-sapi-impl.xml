<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:shopify="http://www.mulesoft.org/schema/mule/shopify" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/shopify http://www.mulesoft.org/schema/mule/shopify/current/mule-shopify.xsd">
	<flow name="get-shopify-orders-flow" doc:id="b4153a76-f62e-416d-9a13-7ed4b967d54c" >
		<logger level="TRACE" doc:name="Trace - Flow Starting" doc:id="842ccded-8608-4f78-b345-7de861595f87" message="Flow starting"/>
		<logger level="TRACE" doc:name="Trace - Retrieving Orders List" doc:id="c489ea48-84bc-41fc-ae2e-bdfab4029c48" message="Retrieve list of orders with status = #[attributes.queryParams.status]"/>
		<http:request method="GET" doc:name="Retrieve Orders List" doc:id="3081f6fe-1db6-4406-b433-c0147c042aaa" config-ref="Shopify_Request_configuration" path="/admin/api/${shopify.admin_api.version}/orders.json" outputMimeType="application/json">
			<http:body ><![CDATA[#[""]]]></http:body>
			<http:headers ><![CDATA[#[output application/java
---
{
	"X-Shopify-Access-Token" : p("shopify.admin_api.access_token")
}]]]></http:headers>
			<http:query-params ><![CDATA[#[output application/java
---
{
	"status" : attributes.queryParams.status
}]]]></http:query-params>
		</http:request>
		<logger level="TRACE" doc:name="Trace - Retrieved Successfully" doc:id="9e7426ac-a29b-4e2e-9575-6e8a8af19411" message="Retrieved list of orders from Shopify successfully"/>
		<ee:transform doc:name="Create API Response" doc:id="90a68939-0c42-48d7-98bc-328ccc8d76d9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.orders map ( order , indexOfOrder ) -> {
	lineItems: order.line_items map ( lineitem , indexOfLineitem ) -> {
		quantity: lineitem.quantity,
		price: lineitem.price as Number,
		id: lineitem.id as String,
		title: lineitem.name,
		sku: lineitem.sku
	},
	phone: order.phone,
	shippingAddress: {
		zip: order.shipping_address.zip,
		firstName: order.shipping_address.first_name,
		lastName: order.shipping_address.last_name,
		country: order.shipping_address.country,
		address2: order.shipping_address.address2,
		city: order.shipping_address.city,
		phone: order.shipping_address.phone,
		address1: order.shipping_address.address1,
		state: order.shipping_address.province
	},
	billingAddress: {
		zip: order.billing_address.zip,
		firstName: order.billing_address.first_name,
		lastName: order.billing_address.last_name,
		country: order.billing_address.country_code,
		address2: order.billing_address.address2,
		city: order.billing_address.city,
		phone: order.billing_address.phone,
		address1: order.billing_address.address1,
		state: order.billing_address.province_code
	},
	email: order.email,
	customer: {
		firstName: order.customer.first_name,
		lastName: order.customer.last_name,
		phone: order.customer.phone,
		email: order.customer.email
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="TRACE" doc:name="Trace - Flow Ending" doc:id="0f030755-9155-4602-a896-4efbd01e21db" message="Flow ending" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="97d1cfb9-c9cc-429e-98c5-180f1cb42d0f" >
				<logger level="ERROR" doc:name="Error - Log Error Payload" doc:id="6c744b32-77bb-4391-aa80-dd72a3c37009" message="#[output application/json --- error.errorMessage.payload]" />			
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="create-shopify-order-flow" doc:id="8cf38ea6-c1cb-400e-ae04-c6b2656bbe5a" >
		<logger level="TRACE" doc:name="Trace - Flow Starting" doc:id="4d65d1a4-3687-4cab-b409-a28834043d78" message="Flow starting"/>
		<logger level="TRACE" doc:name="Trace - Creating Shopify Request" doc:id="264576ad-2e9f-4fce-bd76-dbc81f1ce577" message="Creating Shopify request body to create an order."/>
		<ee:transform doc:name="To Shopify Order" doc:id="8caf8ea8-b56b-4eb4-b853-dd246f2d797b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	order: {
		billing_address: {
			address1: payload.billingAddress.address1,
			address2: payload.billingAddress.address2 default "",
			city: payload.billingAddress.city,
			country: payload.billingAddress.country default "",
			first_name: payload.billingAddress.firstName,
			last_name: payload.billingAddress.lastName,
			phone: payload.billingAddress.phone default "",
			province: payload.billingAddress.state,
			zip: payload.billingAddress.zip
		},
		customer: {
			email: payload.customer.email,
			first_name: payload.customer.firstName,
			last_name: payload.customer.lastName,
			phone: payload.customer.phone
		},
		email: payload.email,
		line_items: payload.lineItems map ( lineItem , indexOfLineItem ) -> {
			price: lineItem.price as String,
			quantity: lineItem.quantity,
			sku: lineItem.sku default "",
			title: lineItem.title
		},
		phone: payload.phone,
		shipping_address: {
			address1: payload.shippingAddress.address1,
			address2: payload.shippingAddress.address2 default "",
			city: payload.shippingAddress.city,
			country: payload.shippingAddress.country,
			first_name: payload.shippingAddress.firstName,
			last_name: payload.shippingAddress.lastName,
			phone: payload.shippingAddress.phone default "",
			province: payload.shippingAddress.state,
			zip: payload.shippingAddress.zip
		}
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="TRACE" doc:name="Trace - Creating Shopify Order" doc:id="7de1dfba-3bca-43a2-8281-3b6efeda3cce" message="Creating the order in Shopify"/>
		<http:request method="POST" doc:name="Create Shopify Order" doc:id="46bd50a4-186a-4123-906f-47a3a2faae4e" config-ref="Shopify_Request_configuration" path="/admin/api/${shopify.admin_api.version}/orders.json" outputMimeType="application/json">
			<http:headers><![CDATA[#[output application/java
---
{
	"X-Shopify-Access-Token" : p("shopify.admin_api.access_token")
}]]]></http:headers>
		</http:request>
		<logger level="TRACE" doc:name="Trace - Created Order Successfully" doc:id="7bd18a4f-325a-4bb6-8546-99faca3e1e19" message="Order created successfully in Shopify." />
		<ee:transform doc:name="Create API Response" doc:id="99ab87bf-170f-43ac-9729-f1ead8613ea1">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	dateTime: now(),
	httpStatus: 201,
	summaryMessage: "Order created successfully in Shopify",
	responseDetails: [{
		severity: "INFO",
		message: "Order id: " ++ (payload.order.app_id as String)
	},{
		severity: "INFO",
		message: "Order #: " ++ (payload.order.order_number as String)
	}],
	responseStatus: "SUCCESS",
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="TRACE" doc:name="Trace - Flow Ending" doc:id="679f0af7-a89d-43ed-9180-f2aa03719ecd" message="Flow ending" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="c85e55e4-655e-43d5-ae00-76a0900d588e" >
				<logger level="ERROR" doc:name="Error - Log Error Payload" doc:id="62709e19-223b-409d-8608-36d2fe421f57" message="#[output application/json --- error.errorMessage.payload]" />
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
