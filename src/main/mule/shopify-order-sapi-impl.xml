<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:shopify="http://www.mulesoft.org/schema/mule/shopify" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/shopify http://www.mulesoft.org/schema/mule/shopify/current/mule-shopify.xsd">
	<flow name="get-shopify-orders-flow" doc:id="b4153a76-f62e-416d-9a13-7ed4b967d54c" >
		<logger level="TRACE" doc:name="Trace - Flow Starting" doc:id="842ccded-8608-4f78-b345-7de861595f87" message="Flow starting"/>
		<logger level="TRACE" doc:name="Trace - Retrieving Orders List" doc:id="c489ea48-84bc-41fc-ae2e-bdfab4029c48" message="Retrieve list of orders with status = #[attributes.queryParams.status]"/>
		<shopify:order-list doc:name="Get Orders" doc:id="2e7a7776-0ab5-4218-8d9a-2df615cf6544" config-ref="Shopify_Connector_Config" statusQueryParam="#[attributes.uriParams.status]"/>
		<logger level="TRACE" doc:name="Trace - Retrieved Successfully" doc:id="9e7426ac-a29b-4e2e-9575-6e8a8af19411" message="Retrieved list of orders from Shopify successfully"/>
		<ee:transform doc:name="Create API Response" doc:id="90a68939-0c42-48d7-98bc-328ccc8d76d9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	lineItems: payload01.line_items map ( lineitem , indexOfLineitem ) -> {
		id: lineitem.id as String,
		sku: lineitem.sku,
		title: lineitem.title,
		quantity: lineitem.quantity,
		price: lineitem.price as Number
	},
	phone: payload01.phone as String default "",
	email: payload01.email,
	customer: {
		firstName: payload01.customer.first_name as String default "",
		lastName: payload01.customer.last_name as String default "",
		phone: payload01.customer.phone as String default "",
		email: payload01.customer.email default ""
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="TRACE" doc:name="Trace - Flow Ending" doc:id="0f030755-9155-4602-a896-4efbd01e21db" message="Flow ending" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="97d1cfb9-c9cc-429e-98c5-180f1cb42d0f" >
				<logger level="ERROR" doc:name="Error - Log Error Payload" doc:id="6c744b32-77bb-4391-aa80-dd72a3c37009" message="#[output application/json --- error.errorMessage.payload]" />			
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="get-shopify-order-by-id-flow" doc:id="067efd70-4b51-410e-97b6-728cefe37cc3" >
		<logger level="TRACE" doc:name="Trace - Flow Starting" doc:id="2398b519-d669-4fa1-9624-610f7f8c70f5" message="Flow starting" />
		<logger level="TRACE" doc:name="Trace - Retrieving Order By ID" doc:id="a3a4b920-3971-451f-ae2e-fcb2c38b198c" message="Retrieve order with ID = #[attributes.queryParams.status]" />
		<shopify:order-get orderIdUriParam="#[attributes.uriParams.orderId]" doc:name="Order Get" doc:id="e26c936d-e9cd-40e9-bb53-dbf1d2bac647" config-ref="Shopify_Connector_Config"/>
		<logger level="TRACE" doc:name="Trace - Retrieved Successfully" doc:id="3cc9fe2a-974f-418d-885c-6eb77ea563a3" message="Retrieved order from Shopify successfully" />
		<ee:transform doc:name="Create API Response" doc:id="2d568cfe-08a3-4ea2-bc47-73b9fced685e">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	lineItems: payload.order.line_items map ( lineitem , indexOfLineitem ) -> {
		quantity: lineitem.quantity,
		price: lineitem.price as Number,
		id: lineitem.id as String,
		title: lineitem.title,
		sku: lineitem.sku
	},
	phone: payload.order.phone,
	shippingAddress: {
		zip: payload.order.shipping_address.zip,
		firstName: payload.order.shipping_address.first_name,
		lastName: payload.order.shipping_address.last_name,
		country: payload.order.shipping_address.country,
		address2: payload.order.shipping_address.address2,
		city: payload.order.shipping_address.city,
		phone: payload.order.shipping_address.phone,
		address1: payload.order.shipping_address.address1,
		state: payload.order.shipping_address.province
	},
	billingAddress: {
		zip: payload.order.billing_address.zip,
		firstName: payload.order.billing_address.first_name,
		lastName: payload.order.billing_address.last_name,
		country: payload.order.billing_address.country_code,
		address2: payload.order.billing_address.address2,
		city: payload.order.billing_address.city,
		phone: payload.order.billing_address.phone,
		address1: payload.order.billing_address.address1,
		state: payload.order.billing_address.province_code
	},
	email: payload.order.email,
	customer: {
		firstName: payload.order.customer.first_name,
		lastName: payload.order.customer.last_name,
		phone: payload.order.customer.phone,
		email: payload.order.customer.email
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="TRACE" doc:name="Trace - Flow Ending" doc:id="87eafc62-bd46-48c0-a7e5-1aa52621b90c" message="Flow ending" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="8d1ea588-712f-4030-af2a-0bd0795ac801" >
				<logger level="ERROR" doc:name="Error - Log Error Payload" doc:id="43cac47e-ad13-4ea3-80ef-1013d5dcd719" message="#[output application/json --- error.errorMessage.payload]" />
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="create-shopify-order-flow" doc:id="8cf38ea6-c1cb-400e-ae04-c6b2656bbe5a" >
		<logger level="TRACE" doc:name="Trace - Flow Starting" doc:id="4d65d1a4-3687-4cab-b409-a28834043d78" message="Flow starting"/>
		<logger level="TRACE" doc:name="Trace - Creating Shopify Request" doc:id="264576ad-2e9f-4fce-bd76-dbc81f1ce577" message="Creating Shopify request body to create an order."/>
		<ee:transform doc:name="To Shopify Order" doc:id="18cae6a8-c7a9-4f05-b4d6-25215f241c95">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	order: {
		billing_address: {
			zip: payload.billingAddress.zip,
			country: payload.billingAddress.country,
			city: payload.billingAddress.city,
			address2: payload.billingAddress.address2,
			address1: payload.billingAddress.address1,
			last_name: payload.billingAddress.lastName,
			province: payload.billingAddress.state,
			phone: payload.billingAddress.phone,
			company: payload.billingAddress.company,
			first_name: payload.billingAddress.firstName
		},
		line_items: payload.lineItems map ( lineItem , indexOfLineItem ) -> {
			quantity: lineItem.quantity,
			price: lineItem.price as String,
			title: lineItem.title,
			sku: lineItem.sku
		},
		phone: payload.phone,
		shipping_address: {
			zip: payload.shippingAddress.zip,
			country: payload.shippingAddress.country,
			city: payload.shippingAddress.city,
			address2: payload.shippingAddress.address2,
			address1: payload.shippingAddress.address1,
			last_name: payload.shippingAddress.lastName,
			province: payload.shippingAddress.state,
			phone: payload.shippingAddress.phone,
			company: payload.shippingAddress.company,
			first_name: payload.shippingAddress.firstName
		},
		email: payload.email,
		customer: {
			last_name: payload.customer.lastName,
			first_name: payload.customer.firstName,
			email: payload.customer.email
		}
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="TRACE" doc:name="Trace - Creating Shopify Order" doc:id="7de1dfba-3bca-43a2-8281-3b6efeda3cce" message="Creating the order in Shopify"/>
		<shopify:order-create doc:name="Create Shopify Order" doc:id="1c1da20b-8816-43fc-b656-cc7ddc41052d" config-ref="Shopify_Connector_Config" />
		<logger level="TRACE" doc:name="Trace - Created Order Successfully" doc:id="7bd18a4f-325a-4bb6-8546-99faca3e1e19" message="Order created successfully in Shopify." />
		<ee:transform doc:name="Create API Response" doc:id="99ab87bf-170f-43ac-9729-f1ead8613ea1">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	dateTime: now(),
	httpStatus: 201,
	summaryMessage: "Order created successfully in Shopify",
	responseDetails: [{
		severity: "INFO",
		message: "Order id: " ++ (payload.order.app_id as String)
	},{
		severity: "INFO",
		message: "Order #: " ++ (payload.order.order_number as String)
	}],
	responseStatus: "SUCCESS",
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="TRACE" doc:name="Trace - Flow Ending" doc:id="679f0af7-a89d-43ed-9180-f2aa03719ecd" message="Flow ending" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="c85e55e4-655e-43d5-ae00-76a0900d588e" >
				<logger level="ERROR" doc:name="Error - Log Error Payload" doc:id="62709e19-223b-409d-8608-36d2fe421f57" message="#[output application/json --- error.errorMessage.payload]" />
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
